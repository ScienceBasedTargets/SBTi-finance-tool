:py:mod:`SBTi.configs`
======================

.. py:module:: SBTi.configs

.. autoapi-nested-parse::

   This file defines the constants used throughout the different classes. In order to redefine these settings whilst using
   the module, extend the respective config class and pass it to the class as the "constants" parameter.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   SBTi.configs.ColumnsConfig
   SBTi.configs.PortfolioAggregationConfig
   SBTi.configs.TemperatureScoreConfig
   SBTi.configs.PortfolioCoverageTVPConfig




.. py:class:: ColumnsConfig

   .. py:attribute:: COMPANY_ID
      :annotation: = company_id

      

   .. py:attribute:: COMPANY_ISIN
      :annotation: = company_isin

      

   .. py:attribute:: COMPANY_LEI
      :annotation: = company_lei

      

   .. py:attribute:: COMPANY_ISIC
      :annotation: = isic

      

   .. py:attribute:: REGRESSION_PARAM
      :annotation: = param

      

   .. py:attribute:: REGRESSION_INTERCEPT
      :annotation: = intercept

      

   .. py:attribute:: MARKET_CAP
      :annotation: = company_market_cap

      

   .. py:attribute:: INVESTMENT_VALUE
      :annotation: = investment_value

      

   .. py:attribute:: COMPANY_ENTERPRISE_VALUE
      :annotation: = company_enterprise_value

      

   .. py:attribute:: COMPANY_EV_PLUS_CASH
      :annotation: = company_ev_plus_cash

      

   .. py:attribute:: COMPANY_TOTAL_ASSETS
      :annotation: = company_total_assets

      

   .. py:attribute:: TARGET_REFERENCE_NUMBER
      :annotation: = target_type

      

   .. py:attribute:: SCOPE
      :annotation: = scope

      

   .. py:attribute:: SR15
      :annotation: = sr15

      

   .. py:attribute:: REDUCTION_FROM_BASE_YEAR
      :annotation: = reduction_from_base_year

      

   .. py:attribute:: START_YEAR
      :annotation: = start_year

      

   .. py:attribute:: VARIABLE
      :annotation: = variable

      

   .. py:attribute:: SLOPE
      :annotation: = slope

      

   .. py:attribute:: TIME_FRAME
      :annotation: = time_frame

      

   .. py:attribute:: MODEL
      :annotation: = model

      

   .. py:attribute:: ANNUAL_REDUCTION_RATE
      :annotation: = annual_reduction_rate

      

   .. py:attribute:: EMISSIONS_IN_SCOPE
      :annotation: = emissions_in_scope

      

   .. py:attribute:: TEMPERATURE_SCORE
      :annotation: = temperature_score

      

   .. py:attribute:: COMPANY_NAME
      :annotation: = company_name

      

   .. py:attribute:: OWNED_EMISSIONS
      :annotation: = owned_emissions

      

   .. py:attribute:: COUNTRY
      :annotation: = country

      

   .. py:attribute:: SECTOR
      :annotation: = sector

      

   .. py:attribute:: GHG_SCOPE12
      :annotation: = ghg_s1s2

      

   .. py:attribute:: GHG_SCOPE3
      :annotation: = ghg_s3

      

   .. py:attribute:: COMPANY_REVENUE
      :annotation: = company_revenue

      

   .. py:attribute:: CASH_EQUIVALENTS
      :annotation: = company_cash_equivalents

      

   .. py:attribute:: TARGET_CLASSIFICATION
      :annotation: = target_classification

      

   .. py:attribute:: REDUCTION_AMBITION
      :annotation: = reduction_ambition

      

   .. py:attribute:: BASE_YEAR
      :annotation: = base_year

      

   .. py:attribute:: END_YEAR
      :annotation: = end_year

      

   .. py:attribute:: SBTI_VALIDATED
      :annotation: = sbti_validated

      

   .. py:attribute:: ACHIEVED_EMISSIONS
      :annotation: = achieved_reduction

      

   .. py:attribute:: ISIC
      :annotation: = isic

      

   .. py:attribute:: INDUSTRY_LVL1
      :annotation: = industry_level_1

      

   .. py:attribute:: INDUSTRY_LVL2
      :annotation: = industry_level_2

      

   .. py:attribute:: INDUSTRY_LVL3
      :annotation: = industry_level_3

      

   .. py:attribute:: INDUSTRY_LVL4
      :annotation: = industry_level_4

      

   .. py:attribute:: COVERAGE_S1
      :annotation: = coverage_s1

      

   .. py:attribute:: COVERAGE_S2
      :annotation: = coverage_s2

      

   .. py:attribute:: COVERAGE_S3
      :annotation: = coverage_s3

      

   .. py:attribute:: INTENSITY_METRIC
      :annotation: = intensity_metric

      

   .. py:attribute:: INTENSITY_METRIC_SR15
      :annotation: = intensity_metric

      

   .. py:attribute:: TARGET_TYPE_SR15
      :annotation: = target_type

      

   .. py:attribute:: SR15_VARIABLE
      :annotation: = sr15_variable

      

   .. py:attribute:: REGRESSION_MODEL
      :annotation: = Regression_model

      

   .. py:attribute:: BASEYEAR_GHG_S1
      :annotation: = base_year_ghg_s1

      

   .. py:attribute:: BASEYEAR_GHG_S2
      :annotation: = base_year_ghg_s2

      

   .. py:attribute:: BASEYEAR_GHG_S3
      :annotation: = base_year_ghg_s3

      

   .. py:attribute:: REGION
      :annotation: = region

      

   .. py:attribute:: ENGAGEMENT_TARGET
      :annotation: = engagement_target

      

   .. py:attribute:: PARAM
      :annotation: = param

      

   .. py:attribute:: INTERCEPT
      :annotation: = intercept

      

   .. py:attribute:: WEIGHTED_TEMPERATURE_SCORE
      :annotation: = weighted_temperature_score

      

   .. py:attribute:: CONTRIBUTION_RELATIVE
      :annotation: = contribution_relative

      

   .. py:attribute:: CONTRIBUTION
      :annotation: = contribution

      


.. py:class:: PortfolioAggregationConfig

   .. py:attribute:: COLS
      

      


.. py:class:: TemperatureScoreConfig

   Bases: :py:obj:`PortfolioAggregationConfig`

   This factor determines what part of the temperature for a not SBTi-validated company should be the TS and what part
   should be the default score.
   The calculated temperature score should not be lower than the current level of
   global warning which is expressed through the temperature floor constant.

   .. py:attribute:: SBTI_FACTOR
      :annotation: = 1

      

   .. py:attribute:: FALLBACK_SCORE
      :annotation: :float = 3.2

      

   .. py:attribute:: TEMPERATURE_FLOOR
      :annotation: :float = 0.0

      

   .. py:attribute:: FILE_SR15_MAPPING
      

      

   .. py:attribute:: FILE_REGRESSION_MODEL_SUMMARY
      

      

   .. py:attribute:: DEFAULT_INDUSTRY
      :annotation: = Others

      

   .. py:attribute:: VALUE_TARGET_REFERENCE_ABSOLUTE
      :annotation: = absolute

      

   .. py:attribute:: VALUE_TARGET_REFERENCE_INTENSITY
      :annotation: = intensity

      

   .. py:attribute:: VALUE_TARGET_REFERENCE_INTENSITY_BASE
      :annotation: = int

      

   .. py:attribute:: SLOPE_MAP
      

      

   .. py:attribute:: INTENSITY_MAPPINGS
      

      

   .. py:attribute:: ABSOLUTE_MAPPINGS
      

      

   .. py:attribute:: TEMPERATURE_RESULTS
      :annotation: = temperature_results

      

   .. py:attribute:: INVESTMENT_VALUE
      :annotation: = investment_value

      


.. py:class:: PortfolioCoverageTVPConfig

   Bases: :py:obj:`PortfolioAggregationConfig`

   .. py:attribute:: FILE_TARGETS
      

      

   .. py:attribute:: CTA_FILE_URL
      :annotation: = https://cdn.sciencebasedtargets.org/download/target-dashboard

      

   .. py:attribute:: OUTPUT_TARGET_STATUS
      :annotation: = sbti_target_status

      

   .. py:attribute:: OUTPUT_WEIGHTED_TARGET_STATUS
      :annotation: = weighted_sbti_target_status

      

   .. py:attribute:: VALUE_TARGET_NO
      :annotation: = No target

      

   .. py:attribute:: VALUE_TARGET_SET
      :annotation: = Near-term

      

   .. py:attribute:: VALUE_ACTION_COMMITTED
      :annotation: = Commitment

      

   .. py:attribute:: VALUE_ACTION_TARGET
      :annotation: = Target

      

   .. py:attribute:: TARGET_SCORE_MAP
      

      

   .. py:attribute:: COL_COMPANY_NAME
      :annotation: = Company Name

      

   .. py:attribute:: COL_COMPANY_ISIN
      :annotation: = ISIN

      

   .. py:attribute:: COL_COMPANY_LEI
      :annotation: = LEI

      

   .. py:attribute:: COL_ACTION
      :annotation: = Action

      

   .. py:attribute:: COL_TARGET
      :annotation: = Target

      


